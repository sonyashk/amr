import java.sql.*;
import java.util.Scanner;

public class MathOperationsMenu {
    private static final String URL = "jdbc:mysql://localhost:3306/mydatabase";
    private static final String USER = "root";
    private static final String PASSWORD = "root";

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int choice;
        do {
            System.out.println("Выберите пункт меню:");
            System.out.println("1. Вывести все таблицы из MySQL");
            System.out.println("2. Создать таблицу в MySQL");
            System.out.println("3. Сложение чисел...");
            System.out.println("4. Вычитание чисел...");
            System.out.println("5. Умножение чисел...");
            System.out.println("6. Деление чисел...");
            System.out.println("7. Деление чисел по модулю (остаток)...");
            System.out.println("8. Модуль числа...");
            System.out.println("9. Возведение числа в степень...");
            System.out.println("10. Сохранить все данные в Excel (и вывести)...");
            System.out.println("0. Выход.");

            choice = sc.nextInt();

            switch (choice) {
                case 1:
                    printAllTables();
                    break;
                case 2:
                    createTableInMySQL();
                    break;
                case 3:
                    additionOperation();
                    break;
                case 4:
                    subtractionOperation();
                    break;
                case 5:
                    multiplicationOperation();
                    break;
                case 6:
                    divisionOperation();
                    break;
                case 7:
                    moduloOperation();
                    break;
                case 8:
                    absOperation();
                    break;
                case 9:
                    powOperation();
                    break;
                case 10:
                    exportToExcel();
                    break;
                case 0:
                    System.out.println("Выход из программы...");
                    break;
                default:
                    System.out.println("Неверный пункт меню.");
            }
        } while (choice != 0);

        sc.close();
    }

    // 1. Печать всех таблиц
    private static void printAllTables() {
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD)) {
            DatabaseMetaData meta = conn.getMetaData();
            ResultSet rs = meta.getTables(null, null, "%", new String[] {"TABLE"});
            while (rs.next()) {
                String tableName = rs.getString("TABLE_NAME");
                System.out.println(tableName);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // 2. Создать таблицу
    private static void createTableInMySQL() {
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement st = conn.createStatement()) {
            String sql = "CREATE TABLE IF NOT EXISTS results("
                       + "id INT AUTO_INCREMENT PRIMARY KEY, "
                       + "operation VARCHAR(50), "
                       + "operand1 DOUBLE, "
                       + "operand2 DOUBLE, "
                       + "result DOUBLE)";
            st.execute(sql);
            System.out.println("Таблица создана или уже существует.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // 3. Сложение
    private static void additionOperation() {
        Scanner sc = new Scanner(System.in);
        System.out.print("Введите первое число: ");
        double a = sc.nextDouble();
        System.out.print("Введите второе число: ");
        double b = sc.nextDouble();
        double res = a + b;
        System.out.println("Результат: " + res);
        saveResultToDB("Сложение", a, b, res);
    }

    // 4. Вычитание
    private static void subtractionOperation() {
        Scanner sc = new Scanner(System.in);
        System.out.print("Введите первое число: ");
        double a = sc.nextDouble();
        System.out.print("Введите второе число: ");
        double b = sc.nextDouble();
        double res = a - b;
        System.out.println("Результат: " + res);
        saveResultToDB("Вычитание", a, b, res);
    }

    // 5. Умножение
    private static void multiplicationOperation() {
        Scanner sc = new Scanner(System.in);
        System.out.print("Введите первое число: ");
        double a = sc.nextDouble();
        System.out.print("Введите второе число: ");
        double b = sc.nextDouble();
        double res = a * b;
        System.out.println("Результат: " + res);
        saveResultToDB("Умножение", a, b, res);
    }

    // 6. Деление
    private static void divisionOperation() {
        Scanner sc = new Scanner(System.in);
        System.out.print("Введите делимое: ");
        double a = sc.nextDouble();
        System.out.print("Введите делитель: ");
        double b = sc.nextDouble();

        if (b == 0) {
            System.out.println("Ошибка: Деление на ноль!");
            return;
        }

        double res = a / b;
        System.out.println("Результат: " + res);
        saveResultToDB("Деление", a, b, res);
    }

    // 7. Деление по модулю (остаток)
    private static void moduloOperation() {
        Scanner sc = new Scanner(System.in);
        System.out.print("Введите делимое (целое число): ");
        int a = sc.nextInt();
        System.out.print("Введите делитель (целое число): ");
        int b = sc.nextInt();

        if (b == 0) {
            System.out.println("Ошибка: Деление на ноль!");
            return;
        }

        int res = a % b;
        System.out.println("Результат: " + res);
        saveResultToDB("Деление по модулю", a, b, res);
    }

    // 8. Модуль числа
    private static void absOperation() {
        Scanner sc = new Scanner(System.in);
        System.out.print("Введите число: ");
        double a = sc.nextDouble();
        double res = (a < 0) ? -a : a;
        System.out.println("Модуль: " + res);
        saveResultToDB("Модуль", a, 0, res);
    }

    // 9. Возведение в степень
    private static void powOperation() {
        Scanner sc = new Scanner(System.in);
        System.out.print("Введите число (основание): ");
        double base = sc.nextDouble();
        System.out.print("Введите показатель степени (целое число): ");
        int exp = sc.nextInt();

        double result = 1;
        if (exp < 0) {
            int positiveExp = -exp;
            for (int i = 0; i < positiveExp; i++) {
                result *= base;
            }
            result = 1 / result;
        } else {
            for (int i = 0; i < exp; i++) {
                result *= base;
            }
        }

        System.out.println("Результат: " + result);
        saveResultToDB("Возведение в степень", base, exp, result);
    }

    // 10. Сохранить результаты в Excel (упрощённая заглушка)
    private static void exportToExcel() {
        // Здесь обычно используется Apache POI или аналогичная библиотека.
        // Для экзамена можно сказать, что будем "имитировать" сохранение,
        // либо рассказать, как бы мы это сделали.
        System.out.println("Результаты сохранены в Excel (условно)");
    }

    // Сохранение результата в БД
    private static void saveResultToDB(String operation, double a, double b, double res) {
        String sql = "INSERT INTO results(operation, operand1, operand2, result) VALUES(?,?,?,?)";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement ps = conn.prepareStatement(sql)) {
            ps.setString(1, operation);
            ps.setDouble(2, a);
            ps.setDouble(3, b);
            ps.setDouble(4, res);
            ps.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
